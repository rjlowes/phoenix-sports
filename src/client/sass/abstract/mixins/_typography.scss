// Font fontface
@mixin font-face($font-face) {
    @font-face {
        font-family: $font-face;
        src: url('../fonts/#{$font-face}.woff2') format('woff2'),
             url('../fonts/#{$font-face}.woff') format('woff');
        font-weight: normal;
        font-style: normal;
    }
}

@mixin font-faces($font-faces: $font-faces) {
    @each $font-face in $font-faces {
        @include font-face($font-face);
    }
}


// rem mixin
//
// -----------------------------
@mixin rem($sizeValue: 1.6) {
    font-size: ($sizeValue * 10) + px;
    font-size: $sizeValue + rem;
}


// font size mixin
//
// -----------------------------
@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

//
//
// -----------------------------
@function strip-unit($num) {
	@return $num / ($num * 0 + 1);
}

// rem fallback
// allows rem to be set on any property
//
// -----------------------------
@mixin rem-fallback($property, $values...) {
	$max: length($values);
	$pxValues: '';
	$remValues: '';

	@for $i from 1 through $max {
		$value: strip-unit(nth($values, $i));
		$pxValues: #{$pxValues + $value*16}px;

		@if $i < $max {
			$pxValues: #{$pxValues + " "};
		}
	}

	@for $i from 1 through $max {
		$value: strip-unit(nth($values, $i));
		$remValues: #{$remValues + $value}rem;

		@if $i < $max {
			$remValues: #{$remValues + " "};
		}
	}

	#{$property}: $pxValues;
	#{$property}: $remValues;
}
